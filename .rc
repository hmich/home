if [ -f ~/.aliases ]; then
   . ~/.aliases
fi

export EDITOR=vim
export LESS='-iMNx4FRSX'
export LESSCHARSET=utf-8

#umask 0122

if [ "$(uname)" != "Linux" ]; then
    export R=/cygdrive/c/work/src
    export DATA=$R/Areator/Source/DataProcessing

    alias ff='sel -a $R/list'

    open_project() {
        SLN="$2"
        if [ -z "$SLN" ]; then
            SLN="$1"
        fi
        cygstart "$R/$1/${SLN}.sln"
    }

    alias sln_areator='open_project areator'
    alias sln_dataprocessing='open_project areator dataprocessing'
    alias sln_frigate='open_project frigate'
    alias sln_logicwizard='open_project logicwizard'
    alias sln_trngame='open_project trngame'
    alias sln_trnkernel='open_project trnkernel'

    build_project() {
        ( cd $R/Utils/cmd_build_tools/ && cmd /c "build_$1.cmd" )
    }

    alias build_areator='time build_project areator'
    alias build_scenes='time build_project scenes'
    alias build_dataprocessing='time build_project dataprocessing'
    alias build_frigate='time build_project frigate'
    alias build_logicwizard='time build_project logicwizard'
    alias build_trngame='time build_project trngame'
    alias build_trnkernel='time build_project trnkernel'
    alias build_all='time build_project all'

    alias update='(cd $R && git stash && git svn rebase && git stash apply)'
    alias commit='(cd $R && git stash && git svn dcommit && git stash apply)'

    alias total='cygstart "/cygdrive/c/Program Files/totalcmd/totalcmd.exe"'

    alias areator="cygstart $R/../Bin/Areator/Areator/Release/Areator.UserData.exe"
    alias areatord="cygstart $R/../Bin/Areator/Areator/Debug/Areator.UserData.exe"

    function winsh() {
        if [ -n "$1" ]; then
            P=${1}
        else
            P=.
        fi
        cmd /c start cmd /k "cd `cygpath -aw ${P}`"
    }

    alias start=cygstart
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe.sh ] && eval "$(lesspipe.sh)"

tty > /dev/null && stty -ixon -ixoff

SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initializing new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi
